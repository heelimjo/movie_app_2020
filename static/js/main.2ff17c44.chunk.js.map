{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["MoviePoster","poster","alt","src","title","className","MovieGenre","genre","Movie","synopsis","genres","map","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","summary","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wUAiCA,SAASA,EAAT,GAAoC,IAAdC,EAAa,EAAbA,OAAQC,EAAK,EAALA,IAC1B,OACI,yBAAKC,IAAKF,EAAQC,IAAKA,EAAKE,MAAOF,EAAKG,UAAU,kBAI1D,SAASC,EAAT,GAA6B,IAARC,EAAO,EAAPA,MACjB,OACI,0BAAMF,UAAU,gBAAgBE,GAsBzBC,MAzDf,YAAmD,IAAlCJ,EAAiC,EAAjCA,MAAOK,EAA0B,EAA1BA,SAAUR,EAAgB,EAAhBA,OAAQS,EAAQ,EAARA,OAC1C,OACI,yBAAKL,UAAU,SACX,yBAAKA,UAAU,iBACb,kBAACL,EAAD,CAAaC,OAAQA,EAAQC,IAAKE,KAEpC,yBAAKC,UAAU,iBACX,4BAAKD,GACL,yBAAKC,UAAU,iBACTK,EAAOC,KAAI,SAACJ,EAAOK,GAAR,OAAkB,kBAACN,EAAD,CAAYC,MAAOA,EAAOM,IAAKD,QAEjE,yBAAKP,UAAU,mBAQPI,EAASK,MAAM,EAAG,KAR1B,UC4CEC,G,iNAvDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,yDALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAACN,OAAOA,EAAQD,WAAW,IAT/B,2C,mFAeVQ,KAAKN,c,+BAMG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACpB,OACG,6BAASb,UAAU,aACnBY,EACE,yBAAKZ,UAAU,UACf,0BAAMA,UAAU,eAAhB,cAGA,yBAAKA,UAAU,UAEXa,EAAOP,KAAK,SAAAe,GAAK,OACf,kBAAC,EAAD,CACCb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVvB,MAAOsB,EAAMtB,MACbK,SAAUiB,EAAME,QAChB3B,OAAQyB,EAAMG,mBACdnB,OAAQgB,EAAMhB,kB,GA7CXoB,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2ff17c44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport LinesEllipsis from 'react-lines-ellipsis';\r\n\r\n//movie컴포넌트는 state가 필요하지 않아서 class대신 function으로 함\r\nfunction Movie( {title, synopsis, poster, genres}){\r\nreturn ( \r\n    <div className=\"Movie\">\r\n        <div className=\"Movie__Column\">\r\n          <MoviePoster poster={poster} alt={title} />\r\n        </div>\r\n        <div className=\"Movie__Column\">\r\n            <h1>{title}</h1>\r\n            <div className=\"Movie__Genres\">\r\n                 {genres.map((genre, index) => <MovieGenre genre={genre} key={index} />)}\r\n            </div>\r\n             <div className=\"Movie__Synopsis\">\r\n                 {/* <LinesEllipsis \r\n                    text={synopsis}\r\n                    maxLine='2'\r\n                    ellipsis=\"...\"\r\n                    trimRight\r\n                    basedOn='letters'\r\n                 /> */}\r\n                    {synopsis.slice(0, 140)}...\r\n\r\n             </div>\r\n        </div>\r\n    </div>\r\n );\r\n}\r\n\r\nfunction MoviePoster({poster, alt}){\r\n    return (\r\n        <img src={poster} alt={alt} title={alt} className=\"Movie__Poster\" />\r\n    )\r\n}\r\n\r\nfunction MovieGenre({genre}){\r\n    return(\r\n        <span className=\"Movie__Genre\">{genre}</span>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    \r\n    title: PropTypes.string.isRequired,\r\n    synopsis: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.array.isRequired\r\n};\r\n\r\nMoviePoster.propTypes = {\r\n    poster: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n}\r\n\r\nMovieGenre.propTypes ={\r\n    genre: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from 'axios'; //api 가져오려고 씀!\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n  state = {       \n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => { //async await axios로 가져오는 시간이 걸리기 때문에 기다려야한다\n    const {\n      data:{\n        data: { movies } \n      } // api에서 가져온 data안의 data 안의 movies. es6스크립트\n    } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n        //await는 axios가 데이터를 가져오는 동안 기다리게 함.\n        //async와 같이 써야함.\n\n    this.setState({movies:movies, isLoading: false }) // movies:movies이지만 자바스크립트 새버전으로 간략하게 생략가능\n                     // state에 있는 movies에 axios에서 가져온 movies를 넣음!\n   } \n\n   //compenent가 마운트 한뒤에 바로 실행됨\n  componentDidMount(){\n    this.getMovies();\n  }\n \n  //className은 위의 앱 컴포넌트의 class와 자바스크립트 혼동때문에\n  //className으로 고쳤음.\n\n  render() {\n    const { isLoading, movies } = this.state;\n   return (\n      <section className=\"container\"> \n     {isLoading  ? (\n        <div className=\"loader\">\n        <span className=\"loader_text\">Loading..</span>\n        </div>\n        ) : (\n        <div className=\"movies\">\n          {\n            movies.map( movie => (\n              <Movie\n               key={movie.id}\n               id={movie.id}\n               title={movie.title}\n               synopsis={movie.summary}\n               poster={movie.medium_cover_image}\n               genres={movie.genres}\n             />\n            ))}\n        </div>\n      )}\n      </section>\n   );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}