{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["MoviePoster","poster","alt","src","title","className","MovieGenre","genre","Movie","id","synopsis","genres","to","pathname","state","map","index","key","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","summary","medium_cover_image","React","Component","About","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"2XA+CA,SAASA,EAAT,GAAoC,IAAdC,EAAa,EAAbA,OAAQC,EAAK,EAALA,IAC1B,OACI,yBAAKC,IAAKF,EAAQC,IAAKA,EAAKE,MAAOF,EAAKG,UAAU,kBAI1D,SAASC,EAAT,GAA6B,IAARC,EAAO,EAAPA,MACjB,OACI,0BAAMF,UAAU,gBAAgBE,GAsBzBC,MAtEf,YAAuD,IAAtCC,EAAqC,EAArCA,GAAIL,EAAiC,EAAjCA,MAAOM,EAA0B,EAA1BA,SAAUT,EAAgB,EAAhBA,OAAQU,EAAQ,EAARA,OAC9C,OACI,yBAAKN,UAAU,SAGX,yBAAKA,UAAU,iBACb,kBAACL,EAAD,CAAaC,OAAQA,EAAQC,IAAKE,KAEpC,yBAAKC,UAAU,iBAEf,kBAAC,IAAD,CACAO,GAAI,CACAC,SAAS,UAAD,OAAYJ,GACpBK,MAAM,CACFV,QACAM,WACAT,SACAU,YAKJ,4BAAKP,IAGL,yBAAKC,UAAU,iBACTM,EAAOI,KAAI,SAACR,EAAOS,GAAR,OAAkB,kBAACV,EAAD,CAAYC,MAAOA,EAAOU,IAAKD,QAEjE,yBAAKX,UAAU,mBAEPK,EAASQ,MAAM,EAAG,KAF1B,UC0BEC,G,iNAvDbL,MAAQ,CACNM,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,yDALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CAACN,OAAOA,EAAQD,WAAW,IAT/B,2C,mFAeVQ,KAAKN,c,+BAMG,IAAD,EACuBM,KAAKd,MAA3BM,EADD,EACCA,UAAWC,EADZ,EACYA,OACpB,OACG,6BAAShB,UAAU,aACnBe,EACE,yBAAKf,UAAU,UACf,0BAAMA,UAAU,eAAhB,cAGA,yBAAKA,UAAU,UAEXgB,EAAON,KAAK,SAAAc,GAAK,OACf,kBAAC,EAAD,CACCZ,IAAKY,EAAMpB,GACXA,GAAIoB,EAAMpB,GACVL,MAAOyB,EAAMzB,MACbM,SAAUmB,EAAMC,QAChB7B,OAAQ4B,EAAME,mBACdpB,OAAQkB,EAAMlB,kB,GA7CVqB,IAAMC,YCEVC,MALf,WACI,OAAO,+LCgBIC,E,4LAfS,IAAD,EACeP,KAAKQ,MAA3BC,EADO,EACPA,SAAUC,EADH,EACGA,aACIC,IAAnBF,EAASvB,OACRwB,EAAQE,KAAK,O,+BAGZ,IACEH,EAAYT,KAAKQ,MAAjBC,SACP,OAAGA,EAASvB,MACD,8BAAOuB,EAASvB,MAAMV,OAEtB,S,GAbE4B,IAAMC,W,MCWZQ,MATf,WACI,OACI,yBAAKpC,UAAU,QACX,kBAAC,IAAD,CAAMO,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCaG8B,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MADF,KAEA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW1B,IACxC,kBAAC,IAAD,CAAOwB,KAAK,SAASE,UAAWX,IAChC,kBAAC,IAAD,CAAOS,KAAK,aAAaE,UAAWV,MCVxCW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.792244c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\n\r\n\r\n//movie컴포넌트는 state가 필요하지 않아서 class대신 function으로 함\r\nfunction Movie( {id, title, synopsis, poster, genres}){\r\nreturn ( \r\n    <div className=\"Movie\">\r\n    \r\n   \r\n        <div className=\"Movie__Column\">\r\n          <MoviePoster poster={poster} alt={title} />\r\n        </div>\r\n        <div className=\"Movie__Column\">\r\n        \r\n        <Link\r\n        to={{\r\n            pathname: `/movie/${id}`,\r\n            state:{\r\n                title,\r\n                synopsis,\r\n                poster,\r\n                genres\r\n            }\r\n\r\n        }}>\r\n\r\n            <h1>{title}</h1>\r\n            \r\n        </Link>\r\n            <div className=\"Movie__Genres\">\r\n                 {genres.map((genre, index) => <MovieGenre genre={genre} key={index} />)}\r\n            </div>\r\n             <div className=\"Movie__Synopsis\">\r\n                \r\n                    {synopsis.slice(0, 140)}...\r\n\r\n             </div>\r\n        </div>\r\n      \r\n    </div>\r\n   \r\n );\r\n}\r\n\r\nfunction MoviePoster({poster, alt}){\r\n    return (\r\n        <img src={poster} alt={alt} title={alt} className=\"Movie__Poster\" />\r\n    )\r\n}\r\n\r\nfunction MovieGenre({genre}){\r\n    return(\r\n        <span className=\"Movie__Genre\">{genre}</span>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    \r\n    title: PropTypes.string.isRequired,\r\n    synopsis: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.array.isRequired\r\n};\r\n\r\nMoviePoster.propTypes = {\r\n    poster: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n}\r\n\r\nMovieGenre.propTypes ={\r\n    genre: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from 'axios'; //api 가져오려고 씀!\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component{\r\n  state = {       \r\n    isLoading: true,\r\n    movies: []\r\n  };\r\n\r\n  getMovies = async () => { //async await axios로 가져오는 시간이 걸리기 때문에 기다려야한다\r\n    const {\r\n      data:{\r\n        data: { movies } \r\n      } // api에서 가져온 data안의 data 안의 movies. es6스크립트\r\n    } = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\r\n        //await는 axios가 데이터를 가져오는 동안 기다리게 함.\r\n        //async와 같이 써야함.\r\n\r\n    this.setState({movies:movies, isLoading: false }) // movies:movies이지만 자바스크립트 새버전으로 간략하게 생략가능\r\n                     // state에 있는 movies에 axios에서 가져온 movies를 넣음!\r\n   } \r\n\r\n   //compenent가 마운트 한뒤에 바로 실행됨\r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n \r\n  //className은 위의 앱 컴포넌트의 class와 자바스크립트 혼동때문에\r\n  //className으로 고쳤음.\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n   return (\r\n      <section className=\"container\"> \r\n     {isLoading  ? (\r\n        <div className=\"loader\">\r\n        <span className=\"loader_text\">Loading..</span>\r\n        </div>\r\n        ) : (\r\n        <div className=\"movies\">\r\n          {\r\n            movies.map( movie => (\r\n              <Movie\r\n               key={movie.id}\r\n               id={movie.id}\r\n               title={movie.title}\r\n               synopsis={movie.summary}\r\n               poster={movie.medium_cover_image}\r\n               genres={movie.genres}\r\n             />\r\n            ))}\r\n        </div>\r\n      )}\r\n      </section>\r\n   );\r\n  }\r\n}\r\n\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction About(){\r\n    return <span>노마드 코더 Nomad Coders 유튜브 강의를 보고 따라한\r\n                첫 번째 무비 앱! </span>\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n    \r\n    componentDidMount(){\r\n        const { location, history } = this.props;\r\n        if(location.state === undefined){\r\n            history.push(\"/\"); //home으로 보냄.\r\n        }\r\n    }\r\n    render(){\r\n        const {location} = this.props;\r\n        if(location.state){\r\n            return <span>{location.state.title}</span>\r\n        } else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexport default Detail;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport\"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className=\"navi\">\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/about\">About</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\n\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />  {/*navigation은 router안에 넣어야만 사용가능 */}\n    <Route path=\"/\" exact={true} component={Home} />\n    <Route path=\"/about\" component={About} />\n    <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n     \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}